From f04dc5c6b554c3e84857bd4d7f819235da7e46f6 Mon Sep 17 00:00:00 2001
From: GH Cao <driver1998@foxmail.com>
Date: Wed, 5 Feb 2020 06:44:48 +0800
Subject: [PATCH 3/4] experimental: enable dynarec for Windows ARM

---
 src/cpu_new/codegen_backend_arm.c      |  2 +-
 src/cpu_new/codegen_backend_arm_ops.c  |  2 +-
 src/cpu_new/codegen_backend_arm_uops.c |  2 +-
 src/win/Makefile_ndr.mingw             | 11 +++++------
 4 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/src/cpu_new/codegen_backend_arm.c b/src/cpu_new/codegen_backend_arm.c
index ddabbb5c..90efa1a4 100644
--- a/src/cpu_new/codegen_backend_arm.c
+++ b/src/cpu_new/codegen_backend_arm.c
@@ -1,4 +1,4 @@
-#ifdef __ARM_EABI__
+#if defined(__ARM_EABI__) || defined(_ARM_)
 
 #include <stdint.h>
 #include <stdlib.h>
diff --git a/src/cpu_new/codegen_backend_arm_ops.c b/src/cpu_new/codegen_backend_arm_ops.c
index 1b2ef28f..4e858149 100644
--- a/src/cpu_new/codegen_backend_arm_ops.c
+++ b/src/cpu_new/codegen_backend_arm_ops.c
@@ -1,4 +1,4 @@
-#ifdef __ARM_EABI__
+#if defined(__ARM_EABI__) || defined (_ARM_)
 
 #include <stdint.h>
 #include "../86box.h"
diff --git a/src/cpu_new/codegen_backend_arm_uops.c b/src/cpu_new/codegen_backend_arm_uops.c
index 1dbaab40..46bc92e3 100644
--- a/src/cpu_new/codegen_backend_arm_uops.c
+++ b/src/cpu_new/codegen_backend_arm_uops.c
@@ -1,4 +1,4 @@
-#ifdef __ARM_EABI__
+#if defined(__ARM_EABI__) || defined(_ARM_)
 
 #include <math.h>
 #include <stdint.h>
diff --git a/src/win/Makefile_ndr.mingw b/src/win/Makefile_ndr.mingw
index 94facceb..47487e8e 100644
--- a/src/win/Makefile_ndr.mingw
+++ b/src/win/Makefile_ndr.mingw
@@ -209,12 +209,6 @@ MUNT		:= y
 endif
 ifndef DYNAREC
  DYNAREC		:= y
- ifeq ($(ARM), y)
-  DYNAREC		:= n
- endif
- ifeq ($(ARM64), y)
-  DYNAREC   := n
- endif
 endif
 ifndef DISCORD
  DISCORD	:= y
@@ -366,6 +360,11 @@ ifeq ($(DYNAREC), y)
 ifeq ($(X64), y)
 PLATCG		:= codegen_backend_x86-64.o codegen_backend_x86-64_ops.o codegen_backend_x86-64_ops_sse.o \
 		   codegen_backend_x86-64_uops.o
+else ifeq ($(ARM64), y)
+PLATCG		:= codegen_backend_arm64.o codegen_backend_arm64_ops.o codegen_backend_arm64_uops.o \
+		   codegen_backend_arm64_imm.o
+else ifeq ($(ARM), y)
+PLATCG		:= codegen_backend_arm.o codegen_backend_arm_ops.o codegen_backend_arm_uops.o
 else
 PLATCG		:= codegen_backend_x86.o codegen_backend_x86_ops.o codegen_backend_x86_ops_fpu.o codegen_backend_x86_ops_sse.o \
 		   codegen_backend_x86_uops.o
-- 
2.17.1

